# NOTE: this file is managed by puppet
#
# Configuration file for varnish
#
# /etc/init.d/varnish expects the variables $DAEMON_OPTS, $NFILES and $MEMLOCK
# to be set from this shell script fragment.
#
# Note: If systemd is installed, this file is obsolete and ignored.  You will
# need to copy /lib/systemd/system/varnish.service to /etc/systemd/system/ and
# edit that file.

# Should we start varnishd at boot?  Set to "no" to disable.
START=<%= scope.lookupvar('start') %>

<% if scope.lookupvar('varnish::params::version').to_i == 4 -%>
# Should systemd reload varnish incase of a vcl change?
<% if scope.lookupvar('reload_vcl') -%>
RELOAD_VCL=1
<% else -%>
RELOAD_VCL=0
<% end -%>
<% end -%>

<% if scope.lookupvar('varnish::params::version').to_i == 4 -%>
# User and group for the varnishd worker processes
VARNISH_USER=<%= scope.lookupvar('varnish_user') %>
VARNISH_GROUP=<%= scope.lookupvar('varnish_group') %>
<% end -%>

# Maximum number of open files (for ulimit -n)
NFILES=<%= scope.lookupvar('nfiles') %>

# Maximum locked memory size (for ulimit -l)
# Used for locking the shared memory log in memory.  If you increase log size,
# you need to increase this number as well
MEMLOCK=<%= scope.lookupvar('memlock') %>

# Default varnish instance name is the local nodename.  Can be overridden with
# the -n switch, to have more instances on a single server.
# INSTANCE=$(uname -n)

# See varnishd(1) for more information.
#
# # Main configuration file. You probably want to change it :)
VARNISH_VCL_CONF=<%= scope.lookupvar('varnish_vcl_conf') %>
#
# # Default address and port to bind to
# # Blank address means all IPv4 and IPv6 interfaces, otherwise specify
# # a host name, an IPv4 dotted quad, or an IPv6 address in brackets.
VARNISH_LISTEN_ADDRESS=<%= scope.lookupvar('varnish_listen_address') %>
VARNISH_LISTEN_PORT=<%= scope.lookupvar('varnish_listen_port') %>
#
# # Telnet admin interface listen address and port
VARNISH_ADMIN_LISTEN_ADDRESS=<%= scope.lookupvar('varnish_admin_listen_address') %>
VARNISH_ADMIN_LISTEN_PORT=<%= scope.lookupvar('varnish_admin_listen_port') %>
#
# # The minimum number of worker threads to start
VARNISH_MIN_THREADS=<%= scope.lookupvar('varnish_min_threads') %>
#
# # The Maximum number of worker threads to start
VARNISH_MAX_THREADS=<%= scope.lookupvar('varnish_max_threads') %>
#
# # Idle timeout for worker threads
VARNISH_THREAD_TIMEOUT=<%= scope.lookupvar('varnish_thread_timeout') %>
#
# # Cache file location
VARNISH_STORAGE_FILE=<%= scope.lookupvar('varnish_storage_file') %>
#
# # Cache file size: in bytes, optionally using k / M / G / T suffix,
# # or in percentage of available disk space using the % suffix.
VARNISH_STORAGE_SIZE=<%= scope.lookupvar('varnish_storage_size') %>
#
# # File containing administration secret
VARNISH_SECRET_FILE=<%= scope.lookupvar('varnish_secret_file') %>
#
# # Backend storage specification
<% if scope.lookupvar('storage_type') == 'malloc' %>
VARNISH_STORAGE="<%= scope.lookupvar('storage_type') %>,${VARNISH_STORAGE_SIZE}"
<% else %>
VARNISH_STORAGE="<%= scope.lookupvar('storage_type') %>,${VARNISH_STORAGE_FILE},${VARNISH_STORAGE_SIZE}"
<% end %>

#
# # Default TTL used when the backend does not specify one
VARNISH_TTL=<%= scope.lookupvar('varnish_ttl') %>
#
# # DAEMON_OPTS is used by the init script.  If you add or remove options, make
# # sure you update this section, too.
# Version: <%= scope.lookupvar('varnish::params::version') %>
DAEMON_OPTS="-a <%= scope.lookupvar('varnish_listen_address') %>:<%= scope.lookupvar('varnish_listen_port') %> \
             -f <%= scope.lookupvar('varnish_vcl_conf') %> \
             -T <%= scope.lookupvar('varnish_admin_listen_address') %>:<%= scope.lookupvar('varnish_admin_listen_port') %> \
             -t <%= scope.lookupvar('varnish_ttl') %> \
             -S <%= scope.lookupvar('varnish_secret_file') %> \
<% if scope.lookupvar('storage_type') == 'malloc' -%>
             -s <%= scope.lookupvar('storage_type') %>,<%= scope.lookupvar('varnish_storage_size') %> \
<% else -%>
             -s <%= scope.lookupvar('storage_type') %>,<%= scope.lookupvar('varnish_storage_file') %>,<%= scope.lookupvar('varnish_storage_size') %> \
<% end -%>
<% if @vcl_dir -%>
             -p vcl_dir=<%= @vcl_dir %> \
<% end -%>
<% if scope.lookupvar('varnish::params::version').to_i == 4 -%>
             -p thread_pool_min=<%= scope.lookupvar('varnish_min_threads') %> \
             -p thread_pool_max=<%= scope.lookupvar('varnish_max_threads') %> \
             -p thread_pool_timeout=<%= scope.lookupvar('varnish_thread_timeout') %>"
<% else -%>
             -w <%= scope.lookupvar('varnish_min_threads') %>,<%= scope.lookupvar('varnish_max_threads') %>,<%= scope.lookupvar('varnish_thread_timeout') %>"
<% end -%>


